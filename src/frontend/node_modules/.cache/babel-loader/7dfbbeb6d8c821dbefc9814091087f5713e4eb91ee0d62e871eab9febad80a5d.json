{"ast":null,"code":"var _jsxFileName = \"/home/user/growtoimpress/src/frontend/src/components/HowToSection.js\",\n  _s = $RefreshSig$();\n// src/pages/HowToSection.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/HowToSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HowToSection({\n  userId\n}) {\n  _s();\n  const [selected, setSelected] = useState(\"Building Your Club\");\n  const [guide, setGuide] = useState([]);\n  const [checkedDays, setCheckedDays] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentDayIndex, setCurrentDayIndex] = useState(0);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [flowerSizes, setFlowerSizes] = useState(new Array(6).fill(20));\n  const [isGrowing, setIsGrowing] = useState(false);\n  const topics = [\"Building Your Club\", \"Getting Certifications and Courses\", \"Building Confidence\", \"Recognizing Healthy Relationships\", \"Saving Your First $1,000\", \"Improving Communication Skills\"];\n  const fetchGuideAndProgress = async goalIndex => {\n    setLoading(true);\n    const selectedTopic = topics[goalIndex];\n    try {\n      const guideResponse = await axios.get(`/get-guide/${selectedTopic}`);\n      if (guideResponse.data.daily_guide) {\n        const guideData = guideResponse.data.daily_guide.guide;\n        setGuide(guideData);\n        const progressResponse = await axios.post('/get-user-progress', {\n          user_id: userId\n        });\n        const userProgress = progressResponse.data.progress || {};\n        const completedDays = userProgress[selectedTopic] ? userProgress[selectedTopic].filter(day => day.completed).map(day => day.day) : [];\n        setCheckedDays(completedDays);\n        setFlowerSizes(prevSizes => prevSizes.map((size, index) => Math.min(20 + completedDays.length * 2, 50)));\n        const firstIncompleteDayIndex = guideData.findIndex(day => !completedDays.includes(day.day));\n        setCurrentDayIndex(firstIncompleteDayIndex >= 0 ? firstIncompleteDayIndex : guideData.length - 1);\n      } else {\n        console.error(\"Guide not found for the topic\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching guide or progress:\", error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    const goalIndex = topics.indexOf(selected);\n    fetchGuideAndProgress(goalIndex);\n  }, [selected, userId]);\n  const handleCheckboxChange = async day => {\n    setIsUpdating(true);\n    const updatedCheckedDays = checkedDays.includes(day) ? checkedDays.filter(d => d !== day) : [...checkedDays, day];\n    setCheckedDays(updatedCheckedDays);\n    setFlowerSizes(prevSizes => prevSizes.map((size, index) => Math.min(size + 1, 50)));\n    setCurrentDayIndex(prevIndex => Math.min(prevIndex + 1, guide.length - 1));\n    try {\n      await axios.post('/update-day-completion', {\n        user_id: userId,\n        topic: selected,\n        day,\n        completed: true\n      });\n    } catch (error) {\n      console.error(\"Failed to update day completion status:\", error);\n    }\n    setIsUpdating(false);\n  };\n  const currentDay = guide[currentDayIndex];\n  const Flower = ({\n    size\n  }) => {\n    const intensity = Math.min((size - 20) / 30, 1);\n    const petalColor = interpolateColor('#FFC0CB', '#FF1493', intensity);\n    const centerColor = interpolateColor('#FFD700', '#FF8C00', intensity);\n    const stemColor = interpolateColor('#90EE90', '#228B22', intensity);\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: size * 2,\n      height: size * 3,\n      viewBox: \"0 0 100 150\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M50 150 C 40 100, 60 80, 50 50\",\n        stroke: stemColor,\n        strokeWidth: \"4\",\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 50) scale(0.5)\",\n        children: [[0, 60, 120, 180, 240, 300].map((rotation, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M0 0 C30 -50 70 -50 100 0 C70 50 30 50 0 0\",\n          fill: petalColor,\n          transform: `rotate(${rotation})`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: \"10\",\n          fill: centerColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"how-to-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"navbar-title\",\n        children: \"GROW IMPRESS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navbar-subtitle\",\n        children: \"Your personal growth journey starts here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/how-to-section\",\n          className: \"nav-link active\",\n          children: \"HOW TO SECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/stories\",\n          className: \"nav-link\",\n          children: \"STORIES OF INSPIRATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/resources\",\n          className: \"nav-link\",\n          children: \"RESOURCES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/chatbot\",\n          className: \"nav-link\",\n          children: \"CHAT WITH US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"how-to-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topics-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setSelected(topic);\n              setCurrentDayIndex(0);\n              setCheckedDays([]);\n            },\n            className: selected === topic ? \"selected\" : \"\",\n            children: topic\n          }, topic, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flower-row\",\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '20px'\n          },\n          children: flowerSizes.map((size, index) => /*#__PURE__*/_jsxDEV(Flower, {\n            size: size\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selected, \": 21-Day Plan\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading guide...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this) : currentDay ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day-item ${checkedDays.includes(currentDay.day) ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: checkedDays.includes(currentDay.day),\n              onChange: () => handleCheckboxChange(currentDay.day),\n              disabled: isUpdating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Day \", currentDay.day, \": \", currentDay.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"approaches\",\n            children: currentDay.approaches.map((approach, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: approach\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navigation-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"prev-button\",\n              onClick: () => setCurrentDayIndex(currentDayIndex - 1),\n              disabled: currentDayIndex === 0,\n              children: \"\\u2190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: () => setCurrentDayIndex(currentDayIndex + 1),\n              disabled: currentDayIndex === guide.length - 1,\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All days completed! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"growth-progress\",\n          children: \"Growth Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(HowToSection, \"io3j4YfJsKm1KTqCixVWGImiN2s=\");\n_c = HowToSection;\nfunction interpolateColor(color1, color2, factor) {\n  const parse = c => parseInt(c, 16);\n  const r1 = parse(color1.slice(1, 3)),\n    g1 = parse(color1.slice(3, 5)),\n    b1 = parse(color1.slice(5, 7));\n  const r2 = parse(color2.slice(1, 3)),\n    g2 = parse(color2.slice(3, 5)),\n    b2 = parse(color2.slice(5, 7));\n  const r = Math.round(r1 + factor * (r2 - r1)).toString(16).padStart(2, '0');\n  const g = Math.round(g1 + factor * (g2 - g1)).toString(16).padStart(2, '0');\n  const b = Math.round(b1 + factor * (b2 - b1)).toString(16).padStart(2, '0');\n  return `#${r}${g}${b}`;\n}\nexport default HowToSection;\nvar _c;\n$RefreshReg$(_c, \"HowToSection\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","axios","jsxDEV","_jsxDEV","HowToSection","userId","_s","selected","setSelected","guide","setGuide","checkedDays","setCheckedDays","loading","setLoading","currentDayIndex","setCurrentDayIndex","isUpdating","setIsUpdating","flowerSizes","setFlowerSizes","Array","fill","isGrowing","setIsGrowing","topics","fetchGuideAndProgress","goalIndex","selectedTopic","guideResponse","get","data","daily_guide","guideData","progressResponse","post","user_id","userProgress","progress","completedDays","filter","day","completed","map","prevSizes","size","index","Math","min","length","firstIncompleteDayIndex","findIndex","includes","console","error","indexOf","handleCheckboxChange","updatedCheckedDays","d","prevIndex","topic","currentDay","Flower","intensity","petalColor","interpolateColor","centerColor","stemColor","width","height","viewBox","xmlns","children","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","transform","rotation","cx","cy","r","className","to","onClick","style","display","justifyContent","marginBottom","type","checked","onChange","disabled","title","approaches","approach","_c","color1","color2","factor","parse","c","parseInt","r1","slice","g1","b1","r2","g2","b2","round","toString","padStart","g","b","$RefreshReg$"],"sources":["/home/user/growtoimpress/src/frontend/src/components/HowToSection.js"],"sourcesContent":["// src/pages/HowToSection.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/HowToSection.css';\n\nfunction HowToSection({ userId }) {\n  const [selected, setSelected] = useState(\"Building Your Club\");\n  const [guide, setGuide] = useState([]);\n  const [checkedDays, setCheckedDays] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentDayIndex, setCurrentDayIndex] = useState(0);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [flowerSizes, setFlowerSizes] = useState(new Array(6).fill(20));\n  const [isGrowing, setIsGrowing] = useState(false);\n\n  const topics = [\n    \"Building Your Club\",\n    \"Getting Certifications and Courses\",\n    \"Building Confidence\",\n    \"Recognizing Healthy Relationships\",\n    \"Saving Your First $1,000\",\n    \"Improving Communication Skills\"\n  ];\n\n  const fetchGuideAndProgress = async (goalIndex) => {\n    setLoading(true);\n    const selectedTopic = topics[goalIndex];\n\n    try {\n      const guideResponse = await axios.get(`/get-guide/${selectedTopic}`);\n      if (guideResponse.data.daily_guide) {\n        const guideData = guideResponse.data.daily_guide.guide;\n        setGuide(guideData);\n\n        const progressResponse = await axios.post('/get-user-progress', { user_id: userId });\n        const userProgress = progressResponse.data.progress || {};\n\n        const completedDays = userProgress[selectedTopic]\n          ? userProgress[selectedTopic].filter(day => day.completed).map(day => day.day)\n          : [];\n\n        setCheckedDays(completedDays);\n        setFlowerSizes(prevSizes => prevSizes.map((size, index) => Math.min(20 + completedDays.length * 2, 50)));\n\n        const firstIncompleteDayIndex = guideData.findIndex(\n          day => !completedDays.includes(day.day)\n        );\n        setCurrentDayIndex(firstIncompleteDayIndex >= 0 ? firstIncompleteDayIndex : guideData.length - 1);\n      } else {\n        console.error(\"Guide not found for the topic\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching guide or progress:\", error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    const goalIndex = topics.indexOf(selected);\n    fetchGuideAndProgress(goalIndex);\n  }, [selected, userId]);\n\n  const handleCheckboxChange = async (day) => {\n    setIsUpdating(true);\n    const updatedCheckedDays = checkedDays.includes(day)\n      ? checkedDays.filter(d => d !== day)\n      : [...checkedDays, day];\n\n    setCheckedDays(updatedCheckedDays);\n    setFlowerSizes(prevSizes => prevSizes.map((size, index) => Math.min(size + 1, 50)));\n    setCurrentDayIndex((prevIndex) => Math.min(prevIndex + 1, guide.length - 1));\n\n    try {\n      await axios.post('/update-day-completion', {\n        user_id: userId,\n        topic: selected,\n        day,\n        completed: true\n      });\n    } catch (error) {\n      console.error(\"Failed to update day completion status:\", error);\n    }\n    setIsUpdating(false);\n  };\n\n  const currentDay = guide[currentDayIndex];\n\n  const Flower = ({ size }) => {\n    const intensity = Math.min((size - 20) / 30, 1);\n    const petalColor = interpolateColor('#FFC0CB', '#FF1493', intensity);\n    const centerColor = interpolateColor('#FFD700', '#FF8C00', intensity);\n    const stemColor = interpolateColor('#90EE90', '#228B22', intensity);\n\n    return (\n      <svg width={size * 2} height={size * 3} viewBox=\"0 0 100 150\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M50 150 C 40 100, 60 80, 50 50\" stroke={stemColor} strokeWidth=\"4\" fill=\"none\" />\n        <g transform=\"translate(50, 50) scale(0.5)\">\n          {[0, 60, 120, 180, 240, 300].map((rotation, index) => (\n            <path key={index} d=\"M0 0 C30 -50 70 -50 100 0 C70 50 30 50 0 0\" fill={petalColor} transform={`rotate(${rotation})`} />\n          ))}\n          <circle cx=\"0\" cy=\"0\" r=\"10\" fill={centerColor} />\n        </g>\n      </svg>\n    );\n  };\n\n  return (\n    <div className=\"how-to-section\">\n      {/* Navbar */}\n      <header className=\"navbar\">\n        <h1 className=\"navbar-title\">GROW IMPRESS</h1>\n        <p className=\"navbar-subtitle\">Your personal growth journey starts here.</p>\n        <div className=\"navbar-links\">\n          <Link to=\"/how-to-section\" className=\"nav-link active\">HOW TO SECTION</Link>\n          <Link to=\"/stories\" className=\"nav-link\">STORIES OF INSPIRATION</Link>\n          <Link to=\"/resources\" className=\"nav-link\">RESOURCES</Link>\n          <Link to=\"/chatbot\" className=\"nav-link\">CHAT WITH US</Link>\n        </div>\n      </header>\n\n      {/* Content Container */}\n      <div className=\"how-to-content-container\">\n        <div className=\"topics-list\">\n          <ul>\n            {topics.map(topic => (\n              <li\n                key={topic}\n                onClick={() => { setSelected(topic); setCurrentDayIndex(0); setCheckedDays([]); }}\n                className={selected === topic ? \"selected\" : \"\"}\n              >\n                {topic}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"main-content\">\n          {/* Flower Row Above the Day Item Content */}\n          <div className=\"flower-row\" style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\n            {flowerSizes.map((size, index) => (\n              <Flower key={index} size={size} />\n            ))}\n          </div>\n\n          <h2>{selected}: 21-Day Plan</h2>\n          {loading ? (\n            <p>Loading guide...</p>\n          ) : currentDay ? (\n            <div className={`day-item ${checkedDays.includes(currentDay.day) ? 'completed' : ''}`}>\n              <div className=\"day-title\">\n                <input\n                  type=\"checkbox\"\n                  checked={checkedDays.includes(currentDay.day)}\n                  onChange={() => handleCheckboxChange(currentDay.day)}\n                  disabled={isUpdating}\n                />\n                <span>Day {currentDay.day}: {currentDay.title}</span>\n              </div>\n              <ul className=\"approaches\">\n                {currentDay.approaches.map((approach, index) => (\n                  <li key={index}>{approach}</li>\n                ))}\n              </ul>\n              <div className=\"navigation-buttons\">\n                <button className=\"prev-button\" onClick={() => setCurrentDayIndex(currentDayIndex - 1)} disabled={currentDayIndex === 0}>\n                  &#8592;\n                </button>\n                <button className=\"next-button\" onClick={() => setCurrentDayIndex(currentDayIndex + 1)} disabled={currentDayIndex === guide.length - 1}>\n                  &#8594;\n                </button>\n              </div>\n            </div>\n          ) : (\n            <p>All days completed! 🎉</p>\n          )}\n          <p className=\"growth-progress\">Growth Progress</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction interpolateColor(color1, color2, factor) {\n  const parse = (c) => parseInt(c, 16);\n  const r1 = parse(color1.slice(1, 3)), g1 = parse(color1.slice(3, 5)), b1 = parse(color1.slice(5, 7));\n  const r2 = parse(color2.slice(1, 3)), g2 = parse(color2.slice(3, 5)), b2 = parse(color2.slice(5, 7));\n  const r = Math.round(r1 + factor * (r2 - r1)).toString(16).padStart(2, '0');\n  const g = Math.round(g1 + factor * (g2 - g1)).toString(16).padStart(2, '0');\n  const b = Math.round(b1 + factor * (b2 - b1)).toString(16).padStart(2, '0');\n  return `#${r}${g}${b}`;\n}\n\nexport default HowToSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}