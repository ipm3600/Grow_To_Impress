{"ast":null,"code":"var _jsxFileName = \"/home/user/growtoimpress/src/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: \"Hello! How can I help you today?\"\n  }]);\n  const [input, setInput] = useState('');\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      sender: 'user',\n      text: input\n    }];\n    setMessages(newMessages);\n\n    // Send user input to backend\n    try {\n      const response = await fetch('/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      setMessages([...newMessages, {\n        sender: 'bot',\n        text: data.response\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-window ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChatbot,\n          className: \"close-btn\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && sendMessage(),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChatbot,\n      className: \"chatbot-icon\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"/A0v5yKYTjMR0sweskfN968Ulpc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","sender","text","input","setInput","toggleChatbot","sendMessage","trim","newMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","value","onChange","e","target","onKeyPress","key","placeholder","_c","$RefreshReg$"],"sources":["/home/user/growtoimpress/src/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Chatbot.css';\n\nfunction Chatbot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{ sender: 'bot', text: \"Hello! How can I help you today?\" }]);\n  const [input, setInput] = useState('');\n\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessages = [...messages, { sender: 'user', text: input }];\n    setMessages(newMessages);\n\n    // Send user input to backend\n    try {\n      const response = await fetch('/chatbot', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: input })\n      });\n      const data = await response.json();\n      setMessages([...newMessages, { sender: 'bot', text: data.response }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setInput('');\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className={`chat-window ${isOpen ? 'open' : ''}`}>\n        <div className=\"chat-header\">\n          <h4>Chatbot</h4>\n          <button onClick={toggleChatbot} className=\"close-btn\">X</button>\n        </div>\n        <div className=\"chat-body\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.sender}`}>\n              <p>{msg.text}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n            placeholder=\"Type a message...\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n      <button onClick={toggleChatbot} className=\"chatbot-icon\">\n        ðŸ’¬\n      </button>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}