{"ast":null,"code":"var _jsxFileName = \"/home/user/growtoimpress/src/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSend = () => {\n    if (userInput.trim()) {\n      const newMessages = [...messages, {\n        sender: 'user',\n        text: userInput\n      }];\n      setMessages(newMessages);\n      setUserInput('');\n\n      // Send userInput to backend\n      fetch('/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      }).then(response => response.json()).then(data => {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: data.response\n        }]);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${isOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChatbot,\n          className: \"close-btn\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: handleInputChange,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChatbot,\n      className: \"chatbot-icon\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"fq+VhNRB6vBk2vhHCHxICIZbt1k=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","userInput","setUserInput","toggleChatbot","handleInputChange","e","target","value","handleSend","trim","newMessages","sender","text","fetch","method","headers","body","JSON","stringify","message","then","response","json","data","prevMessages","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/user/growtoimpress/src/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Chatbot.css';\n\nfunction Chatbot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSend = () => {\n    if (userInput.trim()) {\n      const newMessages = [...messages, { sender: 'user', text: userInput }];\n      setMessages(newMessages);\n      setUserInput('');\n\n      // Send userInput to backend\n      fetch('/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: userInput }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: 'bot', text: data.response },\n          ]);\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n    }\n  };\n\n  return (\n    <div className={`chatbot-container ${isOpen ? 'open' : ''}`}>\n      <div className=\"chat-window\">\n        <div className=\"chat-header\">\n          <h4>Chatbot</h4>\n          <button onClick={toggleChatbot} className=\"close-btn\">X</button>\n        </div>\n        <div className=\"chat-body\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.sender}`}>\n              {msg.text}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={handleInputChange}\n            placeholder=\"Type a message...\"\n          />\n          <button onClick={handleSend}>Send</button>\n        </div>\n      </div>\n      {!isOpen && (\n        <button onClick={toggleChatbot} className=\"chatbot-icon\">\n          ðŸ’¬\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}